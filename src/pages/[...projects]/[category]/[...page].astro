---
import { SITE, PROJECTS } from '~/config.mjs';

import Layout from '~/layouts/PageLayout.astro';
import ProjectList from '~/components/project/List.astro';
import Headline from '~/components/project/Headline.astro';
import Pagination from '~/components/project/Pagination.astro';

import { fetchProjects } from '~/utils/project';
import { CATEGORY_BASE } from '~/utils/permalinks';

export async function getStaticPaths({ paginate }: any) {
  if (PROJECTS?.disabled || PROJECTS?.category?.disabled) {
    return [];
  }
  const projects = await fetchProjects();
  const categories = new Set();
  projects.map((project) => {
    typeof project.category === 'string' && categories.add(project.category.toLowerCase());
  });

  return Array.from(categories).map((category: string | any) =>
    paginate(
      projects.filter((project) => typeof project.category === 'string' && category === project.category.toLowerCase()),
      {
        params: { category: category, projects: CATEGORY_BASE || undefined },
        pageSize: PROJECTS.itemPerPage,
        props: { category },
      }
    )
  );
}

const { page, category } = Astro.props;

const currentPage = page.currentPage ?? 1;
const meta = {
  title: `Category'${category}' ${currentPage > 1 ? ` - Page ${currentPage}` : ''}`,
  description: SITE.description,
  noindex: PROJECTS?.category?.noindex,
};
---

<!-- Category filter -->
<Layout meta={meta}>
  <section class="px-6 sm:px-6 py-10 mx-auto max-w-3xl">
    <Headline>Category: <span class="capitalize">{category.replaceAll('-', ' ')}</span></Headline>
    <ProjectList projects={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
